## AWS VPC Creation Template 
## - Creates AWS Components VPC, Public/Private Subnets, SG, Internet Gateway attached public route.
## - Replace ALL 'ProjectName' with your project name, or customize resources names as per requirements.
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VPCcidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 172.16.0.0/16
  Subnetcidr1:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 172.16.1.0/24
  Subnetcidr2:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 172.16.2.0/24
Resources:
  ProjectNameVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCcidr
      Tags:
       - Key: Name
         Value: ProjectNameVPC
  ProjectNameIGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
       - Key: Name
         Value: ProjectNameIGW
  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref ProjectNameIGW
      VpcId: !Ref ProjectNameVPC
  ProjectNameSubnetPublic:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref Subnetcidr1
      MapPublicIpOnLaunch: true
      VpcId: !Ref ProjectNameVPC
      Tags:
       - Key: Name
         Value: ProjectNameSubnetPublic
  ProjectNameSubnetPrivate:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref Subnetcidr2
      MapPublicIpOnLaunch: false
      VpcId: !Ref ProjectNameVPC
      Tags:
       - Key: Name
         Value: ProjectNameSubnetPrivate
  SubnetRouteTableAssociatePublic:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref ProjectNameRouteTablePublic
      SubnetId: !Ref ProjectNameSubnetPublic
  RouteDefaultPublic:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ProjectNameIGW
      RouteTableId: !Ref ProjectNameRouteTablePublic
  ProjectNameRouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref ProjectNameVPC
      Tags:
       - Key: Name
         Value: ProjectNameRouteTablePublic
  ProjectNameMySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh,http,winodws remote, limit CidrIp to your network for security.
      VpcId: !Ref ProjectNameVPC
      SecurityGroupIngress:
       - IpProtocol: tcp
         FromPort: 22
         ToPort: 22
         CidrIp: 0.0.0.0/0   
       - IpProtocol: tcp
         FromPort: 80
         ToPort: 80
         CidrIp: 0.0.0.0/0
       - IpProtocol: tcp
         FromPort: 3389
         ToPort: 3389
         CidrIp: 0.0.0.0/0
      Tags:
       - Key: Name
         Value: ProjectNameMySecurityGroup
Outputs:
  vpcid:
    Description: ID of Shared Infrastructure VPC
    Value: !Ref ProjectNameVPC
    Export: # added to export
      Name: !Sub ${AWS::StackName}-VPCID
  publicroutetable:
    Description: ID of Public Route Table
    Value: !Ref ProjectNameRouteTablePublic
    Export: # added to export
      Name: !Sub ${AWS::StackName}-PublicRoute